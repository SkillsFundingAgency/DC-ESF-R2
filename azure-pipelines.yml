
name: $(VersionNumberMajor).$(VersionNumberMinor)$(Rev:.rrrr)

resources:
- repo: self
  fetchDepth: 15

variables:
  VersionNumberMajor: '0'
  VersionNumberMinor: '2'
  BuildConfiguration: 'Release'
  BuildPlatform: 'Any CPU'
  BuildPlatformAnyCPU: 'Any CPU'
  BuildPlatformX64: 'x64'
  ServiceFabricProjectFolderName: 'ESFA.DC.ESF.R2'

pool:
  name: DCT
  demands:
  - msbuild
  - visualstudio
  - vstest
  - IsBuildServer

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core sdk 2.2.104'
  inputs:
    version: 2.2.104

- task: VisualStudioTestPlatformInstaller@1
  displayName: 'Visual Studio Test Platform Installer'
  inputs:
    versionSelector: latestStable

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.9.0'
  inputs:
    versionSpec: '>=4.9.0'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '**\*.sln'
    vstsFeed: '1d5deb2d-cf8b-4bb1-b147-d13bc246e3f4'
    configuration: '$(BuildConfiguration)' # Optional

- task: VSBuild@1
  displayName: 'vsBuild solution **\*.sln'
  enabled: true
  inputs:
    solution: src/ESFA.DC.ESF.R2.sln
    platform: '$(BuildPlatformAnyCPU)'
    configuration: '$(BuildConfiguration)'
    msbuildArgs: '/p:version=$(Build.BuildNumber) /p:FileVersion=$(Build.BuildNumber)'
    clean: true
    maximumCpuCount: true
    msbuildArchitecture: x64


- task: MSBuild@1
  displayName: 'Build and Package - Service Fabric Config'
  inputs:
    solution: '**\*.sln'
    msbuildArchitecture: x64
    platform: '$(BuildPlatformX64)'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:Package /p:PackageLocation=$(build.artifactstagingdirectory)\applicationpackage /p:version=$(Build.BuildNumber) /p:FileVersion=$(Build.BuildNumber)'
    clean: true
    maximumCpuCount: true
    logProjectEvents: true
    createLogFile: true


- task: MSBuild@1
  enabled: false
  displayName: 'Build solution  - Service Fabric as (x64)'
  inputs:
    solution: '**\*.sfproj'
    msbuildArchitecture: x64
    platform: '$(BuildPlatformX64)'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '-t:restore /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /t:Package /p:PackageLocation="$(build.artifactstagingdirectory)\$(ArtifactFolderName)\ApplicationPackage" /p:version=$(Build.BuildNumber) /p:FileVersion=$(Build.BuildNumber)'
    clean: false
    maximumCpuCount: true
    logProjectEvents: true
    createLogFile: true

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     $(System.DefaultWorkingDirectory)\src\**\*Tests.dll
     !**\*Database.Tests*.dll
     !**\*DataStore.Test*.dll
     !**\packages\**
     !**\*TestAdapter.dll
     !**\*SmokeTests.dll
     !**\*AcceptanceTests.dll
     !**\obj\**
    runInParallel: true
    codeCoverageEnabled: true
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

    
- task: DeleteFiles@1
  displayName: 'Delete Symbols files from $(build.artifactstagingdirectory)\applicationpackage'
  inputs:
    SourceFolder: '$(build.artifactstagingdirectory)\$(ArtifactFolderName)\ApplicationPackage'
    Contents: '**\*.pdb'

- task: CopyFiles@2
  displayName: 'Copy Database Files - Artifact Databases Directory'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\*.dacpac'
    TargetFolder: '$(build.artifactstagingdirectory)\Databases'
    CleanTargetFolder: true
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy Files - $(build.artifactstagingdirectory)\PublishProfiles'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)\src\$(ServiceFabricProjectFolderName)'
    Contents: '**\PublishProfiles\*.xml'
    TargetFolder: '$(build.artifactstagingdirectory)\PublishProfiles '
    CleanTargetFolder: true
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy Files - $(build.artifactstagingdirectory)\ApplicationParameters'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)\src\$(ServiceFabricProjectFolderName)'
    Contents: '**\ApplicationParameters\*.xml'
    TargetFolder: '$(build.artifactstagingdirectory)\ApplicationParameters'
    CleanTargetFolder: true
    flattenFolders: true

- task: ServiceFabricUpdateManifests@2
  displayName: 'Update Service Fabric Manifests (Manifest versions)'
  inputs:
    applicationPackagePath: '$(build.artifactstagingdirectory)\$(ArtifactFolderName)\ApplicationPackage'
    versionBehavior: Replace
  enabled: true

- task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
  displayName: 'Tokenization: Transform file *Tests.dll.config'
  inputs:
    SourcePath: '$(build.sourcesdirectory)\src'
    TargetFileNames: '*Tests.dll.config'
    RequireVariable: true
  enabled: false


#- task: PublishSymbols@2
#  displayName: 'Publish symbols path'
#  inputs:
#    SearchPattern: '**\bin\**\*.pdb'
#    PublishSymbols: false
#  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

